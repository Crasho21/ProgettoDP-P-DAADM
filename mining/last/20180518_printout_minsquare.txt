
	Academic License

>> DataMining_v2
Undefined function or variable 'QT'.

Error in DataMining_v2 (line 32)
    Q = exp(-gamma*QT);
 
>> QT = mfile.QT;
>> DataMining_v2
Undefined function or variable 'QT'.

Error in DataMining_v2 (line 32)
    Q = exp(-gamma*QT);
 
>> clear
>> DataMining_v2
1.000000e-06 1.000000e-06 1.892857e-01 1.892857e-01
1.000000e-06 1.668101e-06 1.827381e-01 1.827381e-01
1.000000e-06 2.782559e-06 1.827381e-01 1.863095e-01
1.000000e-06 4.641589e-06 1.827381e-01 2.029762e-01
1.000000e-06 7.742637e-06 1.827381e-01 2.113095e-01
1.000000e-06 1.291550e-05 1.827381e-01 2.226190e-01
1.000000e-06 2.154435e-05 1.827381e-01 2.297619e-01
1.000000e-06 3.593814e-05 1.827381e-01 2.642857e-01
1.000000e-06 5.994843e-05 1.827381e-01 2.970238e-01
1.000000e-06 1.000000e-04 1.827381e-01 3.702381e-01
1.668101e-06 1.000000e-06 1.672619e-01 1.672619e-01
1.668101e-06 1.668101e-06 1.672619e-01 1.821429e-01
1.668101e-06 2.782559e-06 1.672619e-01 1.827381e-01
1.668101e-06 4.641589e-06 1.672619e-01 2.107143e-01
1.668101e-06 7.742637e-06 1.672619e-01 1.904762e-01
1.668101e-06 1.291550e-05 1.672619e-01 2.083333e-01
1.668101e-06 2.154435e-05 1.672619e-01 2.172619e-01
1.668101e-06 3.593814e-05 1.672619e-01 2.494048e-01
1.668101e-06 5.994843e-05 1.672619e-01 3.083333e-01
1.668101e-06 1.000000e-04 1.672619e-01 3.196429e-01
2.782559e-06 1.000000e-06 1.672619e-01 2.089286e-01
2.782559e-06 1.668101e-06 1.672619e-01 1.886905e-01
2.782559e-06 2.782559e-06 1.672619e-01 2.000000e-01
2.782559e-06 4.641589e-06 1.672619e-01 1.976190e-01
2.782559e-06 7.742637e-06 1.672619e-01 2.107143e-01
2.782559e-06 1.291550e-05 1.672619e-01 1.869048e-01
2.782559e-06 2.154435e-05 1.672619e-01 2.071429e-01
2.782559e-06 3.593814e-05 1.672619e-01 2.005952e-01
2.782559e-06 5.994843e-05 1.672619e-01 2.529762e-01
2.782559e-06 1.000000e-04 1.672619e-01 2.964286e-01
4.641589e-06 1.000000e-06 1.672619e-01 1.898810e-01
4.641589e-06 1.668101e-06 1.672619e-01 1.982143e-01
4.641589e-06 2.782559e-06 1.672619e-01 1.779762e-01
4.641589e-06 4.641589e-06 1.672619e-01 1.946429e-01
4.641589e-06 7.742637e-06 1.672619e-01 1.916667e-01
4.641589e-06 1.291550e-05 1.672619e-01 2.017857e-01
4.641589e-06 2.154435e-05 1.672619e-01 1.696429e-01
4.641589e-06 3.593814e-05 1.672619e-01 1.880952e-01
4.641589e-06 5.994843e-05 1.672619e-01 2.172619e-01
4.641589e-06 1.000000e-04 1.672619e-01 2.428571e-01
7.742637e-06 1.000000e-06 1.672619e-01 1.767857e-01
7.742637e-06 1.668101e-06 1.654762e-01 1.654762e-01
7.742637e-06 2.782559e-06 1.654762e-01 1.952381e-01
7.742637e-06 4.641589e-06 1.654762e-01 1.839286e-01
7.742637e-06 7.742637e-06 1.654762e-01 1.779762e-01
7.742637e-06 1.291550e-05 1.654762e-01 1.988095e-01
7.742637e-06 2.154435e-05 1.654762e-01 2.017857e-01
7.742637e-06 3.593814e-05 1.654762e-01 1.857143e-01
7.742637e-06 5.994843e-05 1.654762e-01 2.000000e-01
7.742637e-06 1.000000e-04 1.654762e-01 1.946429e-01
1.291550e-05 1.000000e-06 1.654762e-01 2.041667e-01
1.291550e-05 1.668101e-06 1.654762e-01 1.773810e-01
1.291550e-05 2.782559e-06 1.654762e-01 1.922619e-01
1.291550e-05 4.641589e-06 1.654762e-01 1.886905e-01
1.291550e-05 7.742637e-06 1.654762e-01 1.916667e-01
1.291550e-05 1.291550e-05 1.654762e-01 1.803571e-01
1.291550e-05 2.154435e-05 1.630952e-01 1.630952e-01
1.291550e-05 3.593814e-05 1.630952e-01 1.898810e-01
1.291550e-05 5.994843e-05 1.630952e-01 1.815476e-01
1.291550e-05 1.000000e-04 1.630952e-01 1.946429e-01
2.154435e-05 1.000000e-06 1.630952e-01 1.898810e-01
2.154435e-05 1.668101e-06 1.630952e-01 1.964286e-01
2.154435e-05 2.782559e-06 1.630952e-01 1.869048e-01
2.154435e-05 4.641589e-06 1.630952e-01 1.863095e-01
2.154435e-05 7.742637e-06 1.630952e-01 1.827381e-01
2.154435e-05 1.291550e-05 1.630952e-01 1.934524e-01
2.154435e-05 2.154435e-05 1.630952e-01 1.827381e-01
2.154435e-05 3.593814e-05 1.630952e-01 1.672619e-01
2.154435e-05 5.994843e-05 1.630952e-01 1.863095e-01
2.154435e-05 1.000000e-04 1.630952e-01 1.994048e-01
3.593814e-05 1.000000e-06 1.630952e-01 1.803571e-01
3.593814e-05 1.668101e-06 1.630952e-01 1.791667e-01
3.593814e-05 2.782559e-06 1.630952e-01 1.875000e-01
3.593814e-05 4.641589e-06 1.630952e-01 1.898810e-01
3.593814e-05 7.742637e-06 1.630952e-01 1.755952e-01
3.593814e-05 1.291550e-05 1.630952e-01 1.839286e-01
3.593814e-05 2.154435e-05 1.630952e-01 1.809524e-01
3.593814e-05 3.593814e-05 1.630952e-01 1.857143e-01
3.593814e-05 5.994843e-05 1.630952e-01 2.017857e-01
3.593814e-05 1.000000e-04 1.630952e-01 1.869048e-01
5.994843e-05 1.000000e-06 1.630952e-01 1.839286e-01
5.994843e-05 1.668101e-06 1.630952e-01 1.726190e-01
5.994843e-05 2.782559e-06 1.630952e-01 2.041667e-01
5.994843e-05 4.641589e-06 1.630952e-01 2.011905e-01
5.994843e-05 7.742637e-06 1.630952e-01 1.863095e-01
5.994843e-05 1.291550e-05 1.630952e-01 1.875000e-01
5.994843e-05 2.154435e-05 1.630952e-01 1.815476e-01
5.994843e-05 3.593814e-05 1.630952e-01 2.160714e-01
5.994843e-05 5.994843e-05 1.630952e-01 1.928571e-01
5.994843e-05 1.000000e-04 1.630952e-01 1.994048e-01
1.000000e-04 1.000000e-06 1.630952e-01 1.958333e-01
1.000000e-04 1.668101e-06 1.630952e-01 1.851190e-01
1.000000e-04 2.782559e-06 1.630952e-01 1.904762e-01
1.000000e-04 4.641589e-06 1.583333e-01 1.583333e-01
1.000000e-04 7.742637e-06 1.583333e-01 1.773810e-01
1.000000e-04 1.291550e-05 1.583333e-01 1.851190e-01
1.000000e-04 2.154435e-05 1.583333e-01 1.982143e-01
1.000000e-04 3.593814e-05 1.583333e-01 1.863095e-01
1.000000e-04 5.994843e-05 1.583333e-01 1.696429e-01
1.000000e-04 1.000000e-04 1.583333e-01 1.946429e-01

ans =

   1.0e-04 *

    1.0000    0.0464


ans =

     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     1     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     0     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     0
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     0
     0     0
     1     1
     1     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     1     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     0
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     1
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     1     0
     1     1
     0     1
     0     0
     1     1
     0     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1
     1     1
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     1     1
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     1     1
     0     0
     1     1
     1     1
     1     1
     0     0
     1     1
     1     1
     0     0
     0     0
     0     0
     0     0
     1     1
     0     0
     1     1
     0     0
     0     0
     1     1
     1     1
     1     1

Valori uguali: 1380 su 1400 -> 98.5714%
Elapsed time is 2545.177059 seconds.
>> 2545/60

ans =

   42.4167

>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1370 su 1400 -> 97.8571%
Elapsed time is 3129.667587 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1383 su 1400 -> 98.7857%
Elapsed time is 3152.704890 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1388 su 1400 -> 99.1429%
Elapsed time is 3201.643677 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1377 su 1400 -> 98.3571%
Elapsed time is 3211.868945 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1377 su 1400 -> 98.3571%
Elapsed time is 3224.583586 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1369 su 1400 -> 97.7857%
Elapsed time is 3236.184022 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1381 su 1400 -> 98.6429%
Elapsed time is 3249.422152 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1368 su 1400 -> 97.7143%
Elapsed time is 3264.421083 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1381 su 1400 -> 98.6429%
Elapsed time is 3277.912366 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1374 su 1400 -> 98.1429%
Elapsed time is 3294.986512 seconds.
>> DataMining_v2
1.000000e-06 1.000000e-06 1.857143e-01 1.857143e-01
1.000000e-06 1.668101e-06 1.815476e-01 1.815476e-01
1.000000e-06 2.782559e-06 1.815476e-01 1.916667e-01
1.000000e-06 4.641589e-06 1.815476e-01 1.880952e-01
1.000000e-06 7.742637e-06 1.815476e-01 2.000000e-01
1.000000e-06 1.291550e-05 1.815476e-01 2.386905e-01
1.000000e-06 2.154435e-05 1.815476e-01 2.625000e-01
1.000000e-06 3.593814e-05 1.815476e-01 3.148810e-01
1.000000e-06 5.994843e-05 1.815476e-01 3.458333e-01
1.000000e-06 1.000000e-04 1.815476e-01 3.589286e-01
1.668101e-06 1.000000e-06 1.815476e-01 1.910714e-01
1.668101e-06 1.668101e-06 1.815476e-01 1.845238e-01
1.668101e-06 2.782559e-06 1.785714e-01 1.785714e-01
1.668101e-06 4.641589e-06 1.785714e-01 1.892857e-01
1.668101e-06 7.742637e-06 1.785714e-01 1.988095e-01
1.668101e-06 1.291550e-05 1.785714e-01 2.113095e-01
1.668101e-06 2.154435e-05 1.785714e-01 2.500000e-01
1.668101e-06 3.593814e-05 1.785714e-01 2.464286e-01
1.668101e-06 5.994843e-05 1.785714e-01 2.952381e-01
1.668101e-06 1.000000e-04 1.785714e-01 3.410714e-01
2.782559e-06 1.000000e-06 1.785714e-01 1.815476e-01
2.782559e-06 1.668101e-06 1.744048e-01 1.744048e-01
2.782559e-06 2.782559e-06 1.744048e-01 1.988095e-01
2.782559e-06 4.641589e-06 1.744048e-01 2.071429e-01
2.782559e-06 7.742637e-06 1.744048e-01 2.011905e-01
2.782559e-06 1.291550e-05 1.744048e-01 2.148810e-01
2.782559e-06 2.154435e-05 1.744048e-01 2.119048e-01
2.782559e-06 3.593814e-05 1.744048e-01 2.202381e-01
2.782559e-06 5.994843e-05 1.744048e-01 2.827381e-01
2.782559e-06 1.000000e-04 1.744048e-01 2.863095e-01
4.641589e-06 1.000000e-06 1.744048e-01 1.827381e-01
4.641589e-06 1.668101e-06 1.744048e-01 1.886905e-01
4.641589e-06 2.782559e-06 1.744048e-01 1.898810e-01
4.641589e-06 4.641589e-06 1.744048e-01 1.958333e-01
4.641589e-06 7.742637e-06 1.744048e-01 1.976190e-01
4.641589e-06 1.291550e-05 1.744048e-01 1.851190e-01
4.641589e-06 2.154435e-05 1.744048e-01 1.839286e-01
4.641589e-06 3.593814e-05 1.744048e-01 2.148810e-01
4.641589e-06 5.994843e-05 1.744048e-01 2.321429e-01
4.641589e-06 1.000000e-04 1.744048e-01 2.678571e-01
7.742637e-06 1.000000e-06 1.744048e-01 1.976190e-01
7.742637e-06 1.668101e-06 1.744048e-01 1.982143e-01
7.742637e-06 2.782559e-06 1.744048e-01 1.910714e-01
7.742637e-06 4.641589e-06 1.744048e-01 1.815476e-01
7.742637e-06 7.742637e-06 1.744048e-01 1.767857e-01
7.742637e-06 1.291550e-05 1.744048e-01 2.113095e-01
7.742637e-06 2.154435e-05 1.744048e-01 2.035714e-01
7.742637e-06 3.593814e-05 1.744048e-01 2.011905e-01
7.742637e-06 5.994843e-05 1.744048e-01 1.928571e-01
7.742637e-06 1.000000e-04 1.744048e-01 2.273810e-01
1.291550e-05 1.000000e-06 1.744048e-01 1.857143e-01
1.291550e-05 1.668101e-06 1.744048e-01 1.886905e-01
1.291550e-05 2.782559e-06 1.744048e-01 1.904762e-01
1.291550e-05 4.641589e-06 1.744048e-01 1.910714e-01
1.291550e-05 7.742637e-06 1.744048e-01 1.863095e-01
1.291550e-05 1.291550e-05 1.744048e-01 1.904762e-01
1.291550e-05 2.154435e-05 1.744048e-01 2.029762e-01
1.291550e-05 3.593814e-05 1.744048e-01 2.125000e-01
1.291550e-05 5.994843e-05 1.744048e-01 2.029762e-01
1.291550e-05 1.000000e-04 1.744048e-01 2.047619e-01
2.154435e-05 1.000000e-06 1.744048e-01 1.815476e-01
2.154435e-05 1.668101e-06 1.744048e-01 1.904762e-01
2.154435e-05 2.782559e-06 1.744048e-01 2.005952e-01
2.154435e-05 4.641589e-06 1.744048e-01 2.000000e-01
2.154435e-05 7.742637e-06 1.744048e-01 1.857143e-01
2.154435e-05 1.291550e-05 1.744048e-01 1.892857e-01
2.154435e-05 2.154435e-05 1.744048e-01 2.178571e-01
2.154435e-05 3.593814e-05 1.744048e-01 2.071429e-01
2.154435e-05 5.994843e-05 1.744048e-01 1.964286e-01
2.154435e-05 1.000000e-04 1.744048e-01 2.148810e-01
3.593814e-05 1.000000e-06 1.744048e-01 1.803571e-01
3.593814e-05 1.668101e-06 1.744048e-01 1.880952e-01
3.593814e-05 2.782559e-06 1.744048e-01 1.875000e-01
3.593814e-05 4.641589e-06 1.744048e-01 1.910714e-01
3.593814e-05 7.742637e-06 1.744048e-01 1.857143e-01
3.593814e-05 1.291550e-05 1.744048e-01 2.011905e-01
3.593814e-05 2.154435e-05 1.744048e-01 1.982143e-01
3.593814e-05 3.593814e-05 1.744048e-01 2.160714e-01
3.593814e-05 5.994843e-05 1.744048e-01 1.880952e-01
3.593814e-05 1.000000e-04 1.744048e-01 2.029762e-01
5.994843e-05 1.000000e-06 1.744048e-01 1.845238e-01
5.994843e-05 1.668101e-06 1.744048e-01 1.964286e-01
5.994843e-05 2.782559e-06 1.744048e-01 2.059524e-01
5.994843e-05 4.641589e-06 1.744048e-01 1.922619e-01
5.994843e-05 7.742637e-06 1.744048e-01 1.982143e-01
5.994843e-05 1.291550e-05 1.744048e-01 1.958333e-01
5.994843e-05 2.154435e-05 1.744048e-01 1.928571e-01
5.994843e-05 3.593814e-05 1.744048e-01 2.029762e-01
5.994843e-05 5.994843e-05 1.744048e-01 1.857143e-01
5.994843e-05 1.000000e-04 1.744048e-01 1.797619e-01
1.000000e-04 1.000000e-06 1.744048e-01 1.863095e-01
1.000000e-04 1.668101e-06 1.744048e-01 1.875000e-01
1.000000e-04 2.782559e-06 1.744048e-01 1.779762e-01
1.000000e-04 4.641589e-06 1.744048e-01 1.982143e-01
1.000000e-04 7.742637e-06 1.744048e-01 1.839286e-01
1.000000e-04 1.291550e-05 1.744048e-01 2.047619e-01
1.000000e-04 2.154435e-05 1.744048e-01 1.922619e-01
1.000000e-04 3.593814e-05 1.744048e-01 2.029762e-01
1.000000e-04 5.994843e-05 1.744048e-01 1.898810e-01
1.000000e-04 1.000000e-04 1.744048e-01 1.857143e-01

ans =

   1.0e-05 *

    0.2783    0.1668

Valori uguali: 1376 su 1400 -> 98.2857%
Elapsed time is 2509.980170 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1375 su 1400 -> 98.2143%
Elapsed time is 4017.620516 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1382 su 1400 -> 98.7143%
Elapsed time is 4029.663542 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1384 su 1400 -> 98.8571%
Elapsed time is 4038.549123 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1377 su 1400 -> 98.3571%
Elapsed time is 4046.987595 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1384 su 1400 -> 98.8571%
Elapsed time is 4060.736815 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1381 su 1400 -> 98.6429%
Elapsed time is 4073.988350 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1382 su 1400 -> 98.7143%
Elapsed time is 4088.672635 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1375 su 1400 -> 98.2143%
Elapsed time is 4102.370697 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1377 su 1400 -> 98.3571%
Elapsed time is 4116.817117 seconds.
>> indexN = randperm(n)';
% nt = round(0.2 * n);    % 20% test
% nlv = n-nt;     %60 training + 20 valid (?)
nlv = round(0.8 * n);
Q = exp(-gamma*QT);
% nl = round(.7*n);
il = indexN(1:nlv);
it = indexN(nlv+1:n); %indici test

fm = Y(il) == 1; fp = Y(il) == 0;
ilp = [il(fm); il(fp)];
YP = [-ones(sum(fm),1); ones(sum(fp),1)];
alpha = (Q(ilp,ilp)+lambda*eye(length(ilp)))\YP;
index = ilp;

tmp = Q(it, index) * alpha;
tmp(tmp>=0) = 0;
tmp(tmp<0) = 1;

%K = [tmp, Y((size(Y,1)-size(tmp,1)+1):end)];
K = [tmp, Y(it)];
full(K);
fprintf(['Valori uguali: ' , num2str(sum(K(:,1)==K(:,2))) , ' su ' , num2str(size(K,1)) , ' -> ' , num2str(((sum(K(:,1)==K(:,2)))/size(K,1))*100), '%%\n'])
toc
Valori uguali: 1374 su 1400 -> 98.1429%
Elapsed time is 4151.629908 seconds.
>> 